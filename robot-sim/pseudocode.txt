function drive:
    powers on motors
    sleeps
    powers off motors


function turn:
    powers on motors with opposite velocity
    sleeps
    powers off motors


function find_silver_token:
    for every token:
        searchs the closest silver token
    if no tokens are detected
	   return -1, -1
    else:
   	    return distance from token, angle from token


function find_golden_token:
    for every token:
        searchs the closest golden token
    if no tokens are detected
       return -1, -1
    else:
        return distance from token, angle from token
   

function searchRoad:
    Calls the scanning function scanSectors.
    Prints the distance from the obstacle in sector 0 (front of the robot).

    if the robot is trapped:
        calls the function findRoad
        return 1

    else if the obstacle in sector 0 is far away:
        if there is an obstacle in sector 1 or -1 (side of the robot):
            turns on the other side
        return 0
        
    else if There is an obstacle in front of the robot:
        calls the findRoad function
        return 1

    return -1

function findRoad:
    Looks in all sectors without sector 0:
        if there is an obstacle on the left:
            turns right
            return True

        else if there is an obstacle on the right.
            turns left
            return True

    return False

function scanSectors:
    for all tokens:
        places the token in the right sector
        If it finds a closest golden token:
        updates the array of sector's distances

    return array of sector's distances

function searchSilver:
    loop forever:
        calls the function find_silver_token
        Writes distance from silver token

        if the robot is not aligned with the silver token:
            turns the robot properly

        else if the robot is far from the silver token:
            moves forward to it

        else if it grabs the silver token:
            calls the funtion moveSilver
            return 0

        else:
            tries again to approach the silver token


function moveSilver:
    Finds the sector with the closest golden token

    if the sector with the minimum distance is on the right:
        turns left.
        drives
        releases the token
        drives backward
        turns right

    if the sector with the minimum distance is on the left:
        turns on the right.
        drives
        releases the token
        drives backward
        turns left

main:
    loop forever:
        calls the function searchRoad
        if there are no obstacles in front of the robot:
            calls the funtion find_silver_token

            if the silver token is in front of the robot:
                calls the function searchSilver

            else:
                drive forward

        else if the road is not already found:
            explores a little bit